@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.spot.alert.UserFragment",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_3537154 { 
   	label=spot
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_236182160 { 
   	label=alert
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   ImageEntity1505960519[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ImageEntity</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   id: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   imageData: byte[] [0..*]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ImageEntityDao_Impl90388556[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ImageEntityDao_Impl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   __db: RoomDatabase [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   __deletionAdapterOfImageEntity: EntityDeletionOrUpdateAdapter&lt;ImageEntity&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   __insertionAdapterOfImageEntity: EntityInsertionAdapter&lt;ImageEntity&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   __updateAdapterOfImageEntity: EntityDeletionOrUpdateAdapter&lt;ImageEntity&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ deleteImageEntity(imageEntity: ImageEntity)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getImageEntity(id: Long): ImageEntity</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertImageEntity(imageEntity: ImageEntity): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateImageEntity(imageEntity: ImageEntity)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

User1505960519[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)User</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   email: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   imageId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   password: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   phoneNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   userId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   userName: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserAdapter138907995[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserAdapter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   clickListener: ClickListener [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   context: Context [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   deleteListener: ClickListener [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   editListener: ClickListener [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   list: List&lt;User&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ onAttachedToRecyclerView(recyclerView: RecyclerView)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onBindViewHolder(viewHolder: UserViewHolder, position: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreateViewHolder(parent: ViewGroup, viewType: int): UserViewHolder</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserFragment1120110595[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserFragment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   adapter: UserAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   deleteListener: ClickListener [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   editListener: ClickListener [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   imageEntityDao: ImageEntityDao [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   recyclerView: RecyclerView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   userDao: UserDao [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   users: List&lt;User&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- loadLiveData()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle): View</TD></TR>
<TR><TD ALIGN="LEFT" >+ onViewCreated(view: View, savedInstanceState: Bundle)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
ImageEntityDao_Impl90388556 -> ImageEntity1505960519[label="__deletionAdapterOfImageEntity
[0..1]"];
ImageEntityDao_Impl90388556 -> ImageEntity1505960519[label="__insertionAdapterOfImageEntity
[0..1]"];
ImageEntityDao_Impl90388556 -> ImageEntity1505960519[label="__updateAdapterOfImageEntity
[0..1]"];
UserAdapter138907995 -> User1505960519[label="list
[0..*]"];
UserFragment1120110595 -> ImageEntityDao_Impl90388556[arrowhead=none];
UserFragment1120110595 -> User1505960519[label="users
[0..*]"];
UserFragment1120110595 -> UserAdapter138907995[label="adapter
[0..1]"];
    
}
@enduml